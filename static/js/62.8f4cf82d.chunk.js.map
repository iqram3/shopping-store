{"version":3,"file":"static/js/62.8f4cf82d.chunk.js","mappings":"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","sources":["components/ProductItem.tsx","components/ProductFilter.tsx","components/Pagination.tsx","components/ProductList.tsx","pages/HomePage.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"../redux/cartSlice\";\nimport { RootState } from \"../redux/store\";\nimport { toast } from \"react-toastify\";\n\ninterface ProductProps {\n  product: {\n    id: number;\n    title: string;\n    price: number;\n    description: string;\n    image: string;\n  };\n}\n\nconst ProductItem: React.FC<ProductProps> = ({ product }) => {\n  const dispatch = useDispatch();\n  const cartItems = useSelector((state: RootState) => state.cart.items);\n\n  const handleAddToCart = () => {\n    const existsInCart = cartItems.some((item) => item.id === product.id);\n\n    if (existsInCart) {\n      toast.warn(`${product.title} is already in your cart!`, {\n        autoClose: 3000,\n        position: \"top-center\",\n      });\n    } else {\n      dispatch(addToCart(product));\n      toast.success(`${product.title} has been added to your cart!`, {\n        autoClose: 3000,\n        position: \"top-center\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"border p-4 rounded shadow-lg hover:shadow-2xl transition-shadow duration-300\">\n      <Link\n        to={`/product/${product.id}`}\n        aria-label={`View details of ${product.title}`}\n      >\n        <img\n          src={product.image}\n          alt={product.title}\n          loading=\"lazy\"\n          className=\"w-full h-48 object-cover rounded-lg\"\n        />\n        <h3\n          className=\"text-lg font-bold mt-4 overflow-hidden whitespace-nowrap text-ellipsis\"\n          title={product.title}\n        >\n          {product.title}\n        </h3>\n        <p className=\"text-gray-700 mt-2\">${product.price.toFixed(2)}</p>\n      </Link>\n      <button\n        onClick={handleAddToCart}\n        aria-label={`Add ${product.title} to cart`}\n        className=\"bg-blue-600 text-white px-4 py-2 rounded mt-4 w-full hover:bg-blue-700 transition-colors duration-300\"\n      >\n        Add to Cart\n      </button>\n    </div>\n  );\n};\n\nexport default ProductItem;\n","import React, { useState } from \"react\";\n\ninterface FilterProps {\n  onFilterChange: (filters: any) => void;\n}\n\nconst ProductFilter: React.FC<FilterProps> = ({ onFilterChange }) => {\n  const [category, setCategory] = useState<string>(\"\");\n\n  const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedCategory = e.target.value;\n    setCategory(selectedCategory);\n    onFilterChange({ category: selectedCategory });\n  };\n\n  return (\n    <div className=\"bg-gray-100 p-4 rounded-lg shadow-md\">\n      <div className=\"mb-4\">\n        <h2 className=\"text-lg font-bold\">Filter by</h2>\n        <label className=\"block mb-1\">Category:</label>\n        <select\n          className=\"border border-gray-300 p-2 rounded w-full md:w-auto\"\n          value={category}\n          onChange={handleCategoryChange}\n        >\n          <option value=\"\">All Categories</option>\n          <option value=\"electronics\">Electronics</option>\n          <option value=\"jewelery\">Jewelery</option>\n          <option value=\"men's clothing\">Men's Clothing</option>\n          <option value=\"women's clothing\">Women's Clothing</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductFilter;\n","import React from \"react\";\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n}) => {\n  const pages = Array.from({ length: totalPages }, (_, i) => i + 1);\n\n  return (\n    <div className=\"flex justify-center my-4\">\n      {pages.map((page) => (\n        <button\n          key={page}\n          onClick={() => onPageChange(page)}\n          className={`mx-2 px-4 py-2 rounded ${\n            currentPage === page ? \"bg-blue-600 text-white\" : \"bg-gray-200\"\n          }`}\n        >\n          {page}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport ProductFilter from \"./ProductFilter\";\nimport Pagination from \"./Pagination\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../redux/store\";\nimport { fetchProducts } from \"../redux/productSlice\";\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  description: string;\n  image: string;\n  category: string;\n}\n\nconst ProductList: React.FC = () => {\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\n  const dispatch = useDispatch<AppDispatch>();\n  const { products, isLoading, isError, errorMessage } = useSelector(\n    (state: RootState) => state.products\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage] = useState(10);\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (products.length > 0) {\n      setFilteredProducts(products);\n    }\n  }, [products]);\n\n  const handleFilterChange = (filters: any) => {\n    let updatedProducts = [...products];\n\n    if (filters.category) {\n      updatedProducts = updatedProducts.filter(\n        (product) => product.category === filters.category\n      );\n    }\n    setFilteredProducts(updatedProducts);\n    setCurrentPage(1);\n  };\n\n  const memoizedFilteredProducts = useMemo(() => {\n    const indexOfLastProduct = currentPage * productsPerPage;\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\n    return filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n  }, [filteredProducts, currentPage, productsPerPage]);\n\n  if (isLoading) {\n    return <div className=\"text-center m-32\">Products are Loading...</div>;\n  }\n\n  if (isError) {\n    return (\n      <div className=\"text-center text-red-500\">Error: {errorMessage}</div>\n    );\n  }\n\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\n\n  return (\n    <div className=\"p-4\">\n      <ProductFilter onFilterChange={handleFilterChange} />\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mt-6\">\n        {memoizedFilteredProducts.map((product) => (\n          <ProductItem key={product.id} product={product} />\n        ))}\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n    </div>\n  );\n};\n\nexport default ProductList;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\n\nconst HomePage: React.FC = () => {\n  return (\n    <div className=\"container mx-auto px-4 md:px-8 lg:px-12\">\n      <h1 className=\"text-2xl md:text-3xl font-bold text-center my-4\">\n        Our Products Testing\n      </h1>\n      <ProductList />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","product","dispatch","useDispatch","cartItems","useSelector","state","cart","items","_jsxs","className","children","Link","to","id","title","_jsx","src","image","alt","loading","price","toFixed","onClick","handleAddToCart","some","item","toast","warn","autoClose","position","addToCart","success","onFilterChange","category","setCategory","useState","value","onChange","e","selectedCategory","target","currentPage","totalPages","onPageChange","pages","Array","from","length","_","i","map","page","ProductList","filteredProducts","setFilteredProducts","products","isLoading","isError","errorMessage","setCurrentPage","productsPerPage","useEffect","fetchProducts","memoizedFilteredProducts","useMemo","indexOfLastProduct","indexOfFirstProduct","slice","Math","ceil","ProductFilter","filters","updatedProducts","filter","ProductItem","Pagination","HomePage"],"sourceRoot":""}